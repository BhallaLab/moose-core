name: Python package

on: [push]

jobs:
  build_wheel:
    runs-on: ${{ matrix.os }}    
    strategy:      
      matrix:
        os: [ubuntu-latest, macos-14, windows-latest]
        build_type: [Release]
        c_compiler: [clang]
        python-version: ["3.10"]
        # python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        include:
          - os: ubuntu-latest
            apt: 10
          - os: macos-14
            brew: 20
          - os: windows-latest
            winget: 30
    steps:
      - uses: actions/checkout@v4
        
      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.21.3
      
      - name: Ubuntu dpendencies
        if: ${{ matrix.apt }}
        run: |
          sudo apt-get -y install libhdf5-dev graphviz-dev python3-lxml doxygen
          sudo apt-get -y install libgsl0-dev libgsl-dev gsl-bin 
          pkg-config --libs gsl
          pkg-config --cflags gsl
      - name: MacOS dpendencies
        if: ${{ matrix.brew }}
        run: |
          brew install gsl
          brew install hdf5
          brew install graphviz
          brew install doxygen
          pkg-config --libs gsl
          pkg-config --cflags gsl
      - name: Windows dpendencies
        if: ${{ matrix.winget }}
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: moose
          cache-environment: true
          cache-downloads: true
          create-args: >-
            python=${{ matrix.python-version }}
            pkg-config
            clang
            hdf5
            pybind11[global]
            graphviz
            pytables
            numpy
            matplotlib
            vpython
            lxml
            doxygen
            setuptools
            wheel
            meson
            ninja
            meson-python
            gsl
            cibuildwheel
          post-cleanup: all
          generate-run-shell: false            

      - name: Non-Windows package 
        if: runner.os != 'Windows'
        env:
          CIBW_BEFORE_ALL_LINUX: yum install gsl-devel
        run: |
          python -m cibuildwheel --output-dir dist
          echo "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
          ls dist
      - name: Windows package
        if: runner.os == 'Windows' 
        run: |
          micromamba shell hook -s powershell | Out-String | Invoke-Expression
          micromamba activate moose
          python -m cibuildwheel --output-dir dist
          echo "$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"
          dir dist
