# This file is a template, and might need editing before it works on your project.
# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: gcc

build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  before_script:
    - apt update && apt -y install cmake git libgsl-dev
    - apt -y install python3-numpy python3-matplotlib python3-pip python3-dev
    - apt -y install python-numpy python-matplotlib python-pip python-dev
  script:
    - python3 setup.py install
    - python3 -m pip install setuptools pip --user --upgrade
    - python2 setup.py install 
    - python2 -m pip install setuptools pip --user --upgrade
    - python3 setup.py sdist
  artifacts:
    paths:
      - mybinary
      # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
      # cache:
      #   paths:
      #     - "*.o"

# run tests using the binary built before
test:
  stage: test
  script:
    - python3 setup.py test
