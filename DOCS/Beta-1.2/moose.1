.\" In .TH, FOO should be all caps, SECTION should be 1-8, maybe w/ subsection
.\" other parms are allowed: see man(7), man(1)
.\"
.\" This template provided by Tom Christiansen <tchrist@jhereg.perl.com>.
.\" 
.TH MOOSE 7 
.SH NAME
MOOSE, Multiscale Object-Oriented Simulation Environment \- A simulator for 
systems biology and computational neuroscience.
.SH SYNOPSIS
.B moose
[
.I scriptfile
]
[
.I args...
]
.SH DESCRIPTION
.\" Putting a newline after each sentence can generate better output.
MOOSE is a general simulator for computational neuroscience and systems 
biology. It is backward compatible with GENESIS, and forward compatible with
Python scripting and multiple solution engines.
.SS "Web pages"
Home page: 
.I http://moose.ncbs.res.in
.br
SourceForge page:
.I http://moose.sourceforge.net
.SS "Installation for Debian/Ubuntu systems"
Download the .deb file. 
Use 
.B dpkg -i packagename.deb
to install it.
Later we will try to get it into the Debian 
repositories so it will be seen by the regular system update tools.
The default installation puts the binaries into 
.I /usr/bin
, the docs and examples scripts in
.I /usr/share/doc/moose 
A copy of the docs and example scripts is also created in the user's home
directory. This is because many of these scripts write out files, and are meant
to be edited by the user.
On a single-user Ubuntu machine, this location is 
.I /home/<user>/moose.
On an administered workstation this may be in 
.I /root/moose.
The sysadmin will
then have to copy the directory over for each of the users.
.SS "Installation on Red Hat/Fedora systems"
Download the .rpm file. Use rpm -i packagename.rpm.
The default installation puts the binaries into /usr/bin, the docs and 
example scripts in /usr/share/doc/moose.
These files should be copied over to the users's home directory.
This is because many of these scripts write out files, and are meant
to be edited by the user.
.SS "Installation on Macintosh systems"
Download the .pkg file. Double click the file and follow the instructions.
The default installation puts the binaries into /usr/local/bin, the docs and 
example scripts in /usr/local/share/doc/moose.
These files should be copied over to the users's home directory.
This is because many of these scripts write out files, and are meant
to be edited by the user.
.SS "Other systems"
Look in the RELEASE_NOTES file in your moose directory described above,
or on the web page.
.SH ERRORS
MOOSE emits various diagnostics when it croaks. Often these will help us
debug it, if you can send them back to the MOOSE sourceforge site at
.I http://sourceforge.net/tracker/?group_id=165660&atid=836272
.SH EXAMPLES
When MOOSE is run from the command line without any arguments, or its icon
is double-clicked, it starts up a Python/Qt based GUI. It has several
menu items:
.br
.B File
This is for loading and saving simulation files. At present it handles 
GENESIS cellreader files (.p files); GENESIS/Kinetikit files, and SBML
files.
.P
.B Edit
This opens up a tab for editing the model. Most models currently have a 
rudimentary default editor.
.P
.B Tutorials and Demos
This lets you run various tutorials and demos from the GUI.
.P
.B Help
This pops up what documentation there may be for the model.
.P
When MOOSE is run from the command line without any arguments, it starts
up an interactive shell with the GENESIS interpreter:
.br
.B moose
.P
When MOOSE has a filename argument (typically with a .g suffix) it treats
that as a GENESIS script file:
.br
.B cd DEMOS/squid-ee
.br
.B moose Squid.g

This will start up the squid tutorial, and dump the output in a text file
named
.I squid.moose.plot
.br
.SS PyMOOSE 
PyMOOSE is a python module for MOOSE. You can import moose in a python 
script and the MOOSE classes will be available to you. Sample scripts
are located in the DEMOS/pymoose directory.

.B cd DEMOS/pymoose/squid
.br
.B python squid.py

This will run the squid example and dump the output in
testSquidXyz.plot in the same directory, where Xyz is the name of the
parameter (GNa, GK, Vm, Ik, etc.).
.br
With PyMOOSE comes a basic GUI for loading models and running
simulations. The command to start this gui is:

.B moosegui.py
.br
The GUI has two tabs - one Model Tree tab and the other Run tab. You
can load a model by selecting File->Load from menu. Once you select a
file in the file selection dialog, the directory containing that file
will be automatically included in the search path for scripts. 

The Model Tree tab contains the MOOSE object hierarchy on the left and
a list of MOOSE classes on the right, grouped into categories. You can
double click any node in the tree and modify the properties of the
MOOSE object corresponding to that node. On the other hand, you can
select a node and double click on a class in the class list in order
to create an object of that class under the selected element. The
default object name is same as the class name, you have to double
click it and change the name field in order to give it a custom name.

In the Run tab you have a set of push-buttons on the left to control the
simulation and a table titled 'Plot' for displaying data plots. When
you load a GENESIS or Kinetikit script, if there are predefined data
tables in the script, those will be plotted in this area.

If you load an SBML file, then there will be a list of molecules
defined in the model to the right of the Plots table. Double click any
item in this list to  select it for plotting concentration.

You can quit the gui by selecting File->Quit or pressing Ctrl+Q in the
keyboard. 
.br
.SH FILES
MOOSE does not need any additional files to run, unlike GENESIS. 
Standard locations on a Linux system are:
.br
.nf
.\" set tabstop to longest possible filename, plus a wee bit
.ta \w'/usr/lib/perl/getopts.pl   'u
\fI/usr/bin/moose\fR	MOOSE binaries
\fI/usr/share/doc/moose\fR	unformatted programmer documentation
In addition the 
.I moose
directory should be located in the user's home directory. This contains
assorted files for documentation, examples, tests and so on.
.br
Unfortunately this beta release does not have much by way of user
documentation. Please refer to the GENESIS manual and book for the old
GENESIS compatible syntax, which works in most of the core commands.

.SH NOTES
MOOSE is licenced under the LGPL. The details are in the COPYING.LIB file.
In general, you can read the code, modify it with attribution, and use it for
all sorts of things. None of these uses have any warranty whatsoever.
However, MOOSE interfaces with other code that
may have a more restrictive licence, in which case the more restrictive terms
may apply. For example, the GNU scientific library is licensed under the GPL.
.SH CAVEATS
This is the beta 1.2.0 version. Many things are incomplete.
.SH BUGS
Lots of things! Please give bug reports to 
.I http://sourceforge.net/tracker/?group_id=165660&atid=836272
.br
or to the people listed at the moose or sourceforge sites.
.SH RESTRICTIONS
The GENESIS parser (SLI) is a backward-compatibility feature. While new objects
are likely to be added, and will become visible through the parser, we don't
plan to do much significant development on the GENESIS SLI, and it will
eventually be deprecated.
.SH AUTHORS
.br
.nf
.\" set tabstop to longest possible filename, plus a wee bit
.ta \w'/usr/lib/perl/getopts.pl   'u
\fIUpi Bhalla\fR	Architect, kinetics, parallel stuff
\fISubhasis Ray\fR	PyMOOSE
\fINiraj Dudani\fR	Compartmental neuronal solver
\fIHarsha Rani\fR	Web page
\fISiji George\fR	Release management
.br
We also acknowledge input from the CRL team led by Parag Chandragupta who
did initial parallelization work, and Johannes Hjorth, who contributed
some objects and is helping with the MUSIC port.
.br
Support is from many sources, including NCBS, the DAE and DBT (India), the
Systems Biology Center of New York, and the EU-India grid project.
.SH HISTORY
MOOSE was inspired by the GENESIS neuronal simulator and still retains its
parser. MOOSE has been in development in various forms for several years,
but the work on SourceForge dates from 2006.
.SH "SEE ALSO"
.\" Always quote multiple words for .SH
Other cool simulators:
.BR GENESIS ,
.BR NEURON ,
.BR NEST ,
.BR Smoldyn ,
.BR MCell ,
.BR VCell ,
.BR COPASI .
