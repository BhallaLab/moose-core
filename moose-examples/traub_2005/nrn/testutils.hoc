begintemplate singlecomp
public soma, stim1, stim2, vvec, gvec, setup_recording, save_data, setup_channel

objectvar stim1, stim2, vvec, gvec
strdef tstr1, iontype
objref this
create soma

e_value = 0.0

proc init(){
    create soma
    soma {
        nseg = 1
        diam = 1.0 // um
        L = 1.0 // um
        v = -65
        // The test compartment should have total axial resistance of 1e5 Ohm
        Ra = 1e5 * (PI * diam * 1e-4 * diam * 1e-4) / (4 * L * 1e-4) // Ohm-cm
        cm = 1e6 * 1e-12 * 1e8 / area(0.5) // uF/cm^2
        insert pas
        // Test compartment's Rm = 1e9 Ohm
        g_pas = (1.0 / 1e9) * 1e8 / area(0.5) // S/cm^2
        e_pas = -65.0 // mV
        stim1 = new IClamp(0.5)
        stim1.del = 50 // ms
        stim1.dur = 100 // ms
        stim1.amp = 1e-3 // nA 
        stim2 = new IClamp(0.5)
        stim2.del = 200 // ms
        stim2.dur = 100 // ms
        stim2.amp = -1e-3 // nA
    }
}    

// setup_channel(channelname, Gbar)
proc setup_channel(){ localobj strfn
    sprint(tstr1, "~insert %s", $s1)
    print tstr1
    soma execute(tstr1)
    sprint(tstr1, "~gbar_%s = %g * 1e8 / area(0.5)", $s1, $2)
    print tstr1
    soma execute(tstr1)
    strfn = new StringFunctions()
    if (strfn.substr($s1, "na") == 0){
        sprint(tstr1, "~ena = 50.0")
    } else if (strfn.substr($s1, "k") == 0){
        sprint(tstr1, "~ek = -95.0")
    } else if (strfn.substr($s1, "ar") == 0){
        sprint(tstr1, "~erev_ar = -35.0")
    } else if (strfn.substr($s1, "cal") == 0){
        // do nothing
        // sprint(tstr1, "~vca = -125.0")
    }
    print tstr1
    soma execute(tstr1)
    
}

// setup_recording(channelname, Dt)
proc setup_recording(){ localobj strfn
    strfn = new StringFunctions()
    vvec = new Vector()    
    vvec.record(&soma.v(0.5), $2)
    gvec = new Vector()
    if ( strfn.substr($s1, "na") == 0 ){
	    sprint(tstr1, "~gvec.record( &soma.ina_%s(0.5), %g)", $s1, $2)
	    e_value = ena
    } else if ( strfn.substr($s1, "k") == 0 ){
	    sprint(tstr1, "~gvec.record( &soma.ik_%s(0.5), %g)", $s1, $2)
	    e_value = ek
    } else if (strfn.substr($s1, "ar") == 0){
      	sprint(tstr1, "~gvec.record( &soma.i_%s(0.5), %g)", $s1, $2)
	    e_value = erev_ar
    } else if (strfn.substr($s1, "cal") == 0){
        sprint(tstr1, "~gvec.record( &soma.ica_%s(0.5), %g)", $s1, $2)
        e_value = 125.0
    } else if (strfn.substr($s1, "cat") == 0){
        sprint(tstr1, "~gvec.record( &soma.i_%s(0.5), %g)", $s1, $2)
        e_value = 125.0
    }
    execute(tstr1, this)
}

// save_data(channelname, Dt)
proc save_data(){ localobj vfile, gfile
    print vvec.size(), gvec.size()
    sprint(tstr1, "data/%s_Vm.dat", $s1)
    print "Saving Vm in ", tstr1
    vfile = new File()
    vfile.wopen(tstr1)
    sprint(tstr1, "data/%s_Gk.dat", $s1)
    gfile = new File()
    gfile.wopen(tstr1)    
    print vvec.size(), gvec.size()
    for ii = 0, vvec.size() - 1 {
	    vfile.printf("%g %g\n", ii * $2 * 1e-3, vvec.x[ii] * 1e-3)
	    soma {
	        gfile.printf("%g %g\n", ii * $2 * 1e-3, gvec.x(ii) * 1e-3 * area(0.5) * 1e-8 / ((vvec.x(ii) - e_value) * 1e-3))
	    }
    }
    vfile.close()
    gfile.close()
}

endtemplate singlecomp

