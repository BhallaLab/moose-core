* Changes in async13 branch
** Mar 2014 - changes in naming
   - SpikeGen.event renamed SpikeGen.spikeOut
   - TimeTable.spikeOut renamed TimeTable.eventOut
   - All sourceFinfos named 'outputOut' are just 'output'
   - All value fields named 'output' which had an outputOut srcFinfo
     counterpart are now renamed 'outputValue'.
   - fields named `vec` renamed to `vector` in order avoid name
     collision with `moose.vec`
   - For each valueFinfo the getter and setter destFinfos are
     `getValueFinfo` and `setValueFinfo` in stead of `get_valueFinfo`
     and `set_valueFinfo`.
   - Ticks are not separate objects now. But their individual dt have
     become field elements of `/clock`: `clock.tickDt[0...9]` where
     each tickDt must be either 0 or an integral multiple of
     `clock.dt`, which is the minimum granularity of timesteps. There
     is also `clock.tickStep[0...9]` which can be any positive
     integer. The relation between tickStep and tickDt is `tickDt[n] =
     tickStep[n] * dt`.
   
** Dec 2013
   - Everything is 1D now. So, instead of dims=(n1, n2, ...) we have
     n=numData for __init__ methods.
   - Added isGlobal flag with keyword argument g=n (n is an unsigned int) in __init__ method.
   - path always includes index
   - Id.name returns a single string in stead of list of identical string for each element
   - slicing of Id implemented
   - Hash of an ObjId is 16 lsb of Id, 32 lsb of dataId, 16 lsb of fieldIndex, in that order from msb to lsb
   - Initialization and object deletion now prints a lot more info in debug compile if VERBOSITY is set to 2.
** Jan 2013
   - melement.id_ renamed melement.vec



* Issues in async13 branch - Dec 2013
  - [X] Too slow in interactive python - effect of mpi?
    - [X] This was possibly due to uninitialized numData in
      ObjId_init_from_path which caused ematrix with extraordinarily
      large number of data elements to be created unless numData was
      explicitly specified.
  - [X] Floating point error in ipython interactive console when trying to print path:
    - [X] This was possibly due to uninitialized numData in
      ObjId_init_from_path which caused ematrix with extraordinarily
      large number of data elements to be created unless numData was
      explicitly specified.
#+begin_src text
subha@chamcham:~/src/moose_async13/tests/python$ ipython 
/usr/local/lib/python2.7/dist-packages/IPython/utils/path.py:471: UserWarning: Found old IPython config file u'/home/subha/.ipython/ipy_user_conf.py' (modified by user)
  warnings.warn("Found old IPython config file %r (modified by user)"%f)
/usr/local/lib/python2.7/dist-packages/IPython/utils/path.py:471: UserWarning: Found old IPython config file u'/home/subha/.ipython/ipythonrc' (modified by user)
  warnings.warn("Found old IPython config file %r (modified by user)"%f)
/usr/local/lib/python2.7/dist-packages/IPython/utils/path.py:483: UserWarning: 
  The IPython configuration system has changed as of 0.11, and these files will
  be ignored. See http://ipython.github.com/ipython-doc/dev/config for details
  of the new config system.
  To start configuring IPython, do `ipython profile create`, and edit
  `ipython_config.py` in <ipython_dir>/profile_default.
  If you need to leave the old config files in place for an older version of
  IPython and want to suppress this warning message, set
  `c.InteractiveShellApp.ignore_old_config=True` in the new config.
  `c.InteractiveShellApp.ignore_old_config=True` in the new config.""")
Python 2.7.3 (default, Sep 26 2013, 20:03:06) 
Type "copyright", "credits" or "license" for more information.

IPython 1.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: import moose
Warning: This MPI implementation does not like multithreading: 0
on node 0, numNodes = 1, numCores = 8
Info: Time to define moose classes:0
Info: Time to initialize module:0.06

In [2]: a = moose.Neutral('a')

In [3]: a.path
[chamcham:02053] *** Process received signal ***
[chamcham:02053] Signal: Floating point exception (8)
[chamcham:02053] Signal code: Integer divide-by-zero (1)
[chamcham:02053] Failing at address: 0x7effe9b5268a
[chamcham:02053] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7effee6a6cb0]
[chamcham:02053] [ 1] /home/subha/src/moose_async13/python/moose/_moose.so(_ZNK16LocalDataElement7getNodeEj+0x20) [0x7effe9b5268a]
[chamcham:02053] [ 2] /home/subha/src/moose_async13/python/moose/_moose.so(_ZNK5ObjId10isDataHereEv+0x31) [0x7effe9b59509]
[chamcham:02053] [ 3] /home/subha/src/moose_async13/python/moose/_moose.so(_ZN5FieldISsE3getERK5ObjIdRKSs+0xbe) [0x7effe99b3a1f]
[chamcham:02053] [ 4] /home/subha/src/moose_async13/python/moose/_moose.so(moose_ObjId_getattro+0x1d9) [0x7effe9a62dbe]
[chamcham:02053] [ 5] /usr/bin/python(PyEval_EvalFrameEx+0x34e) [0x4866be]
[chamcham:02053] [ 6] /usr/bin/python(PyEval_EvalCodeEx+0x1a0) [0x48d930]
[chamcham:02053] [ 7] /usr/bin/python(PyEval_EvalCode+0x32) [0x48e2f2]
[chamcham:02053] [ 8] /usr/bin/python(PyEval_EvalFrameEx+0x312b) [0x48949b]
[chamcham:02053] [ 9] /usr/bin/python(PyEval_EvalCodeEx+0x1a0) [0x48d930]
[chamcham:02053] [10] /usr/bin/python(PyEval_EvalFrameEx+0x848) [0x486bb8]
[chamcham:02053] [11] /usr/bin/python(PyEval_EvalCodeEx+0x1a0) [0x48d930]
[chamcham:02053] [12] /usr/bin/python(PyEval_EvalFrameEx+0x848) [0x486bb8]
[chamcham:02053] [13] /usr/bin/python(PyEval_EvalCodeEx+0x1a0) [0x48d930]
[chamcham:02053] [14] /usr/bin/python(PyEval_EvalFrameEx+0x848) [0x486bb8]
[chamcham:02053] [15] /usr/bin/python(PyEval_EvalCodeEx+0x1a0) [0x48d930]
[chamcham:02053] [16] /usr/bin/python(PyEval_EvalFrameEx+0x848) [0x486bb8]
[chamcham:02053] [17] /usr/bin/python(PyEval_EvalCodeEx+0x1a0) [0x48d930]
[chamcham:02053] [18] /usr/bin/python(PyEval_EvalFrameEx+0x848) [0x486bb8]
[chamcham:02053] [19] /usr/bin/python(PyEval_EvalCodeEx+0x1a0) [0x48d930]
[chamcham:02053] [20] /usr/bin/python(PyEval_EvalFrameEx+0x848) [0x486bb8]
[chamcham:02053] [21] /usr/bin/python(PyEval_EvalCodeEx+0x1a0) [0x48d930]
[chamcham:02053] [22] /usr/bin/python() [0x424522]
[chamcham:02053] [23] /usr/bin/python(PyObject_Call+0x36) [0x4f7496]
[chamcham:02053] [24] /usr/bin/python(PyEval_EvalFrameEx+0x20a8) [0x488418]
[chamcham:02053] [25] /usr/bin/python(PyEval_EvalCodeEx+0x1a0) [0x48d930]
[chamcham:02053] [26] /usr/bin/python(PyEval_EvalFrameEx+0x848) [0x486bb8]
[chamcham:02053] [27] /usr/bin/python(PyEval_EvalCodeEx+0x1a0) [0x48d930]
[chamcham:02053] [28] /usr/bin/python(PyRun_FileExFlags+0xe1) [0x4246a1]
[chamcham:02053] [29] /usr/bin/python(PyRun_SimpleFileExFlags+0x1ce) [0x42492e]
[chamcham:02053] *** End of error message ***
Floating point exception
#+end_src 


* No context (PyMooseContext) object. All global functions are
  directly available under moose module.

* HHChannel and HHGate
** Hodgkin-Huxley type gates in a channel have been renamed gateX, gateY and gateZ
   from xGate, yGate and zGate.

** The gate tables are not available directly. 
   The entries can be accessed as the sequence fields tableA and
   tableB. You can set:

   mygate.tableA = [1.0, 2.0, 3.0]
** No more individual xmin xmax and xdivs fields of the gate tables. 
   They are clubbed in min, max and divs.

* Python 3

** python3: symbol lookup error: /usr/lib/openmpi/lib/openmpi/mca_paffinity_linux.so: undefined symbol: mca_base_param_reg_int
   See: http://us.generation-nt.com/answer/bug-696420-python-gmsh-undefined-symbol-mca-base-param-reg-int-help-209879272.html
   
