
	This directory contains code for python interface for
moose. There are C++ wrappers for relevant moose classes. These
classes are visible to python through a swig wrapper. The file moose.i
contains the swig interface definition. All moose classes that can be
used through python extend one base class - PyMooseBase.

	Some of the moose functionalities are available through this
base class. And the classes named after the moose classes act as a
very thin wrapper over the latter.

	The module is named 'moose'. To compile it, you need to have
swig and python installed. The make program should be invoked in the
top level source directory as :

	make pymoose

	This creates moose.py, moose_wrap.cxx, _moose.so in the
pymoose directory. Note that if you ran make for moose earlier, you
need to run "make clean" first. This is because swig uses dynamic
linking/loading (.so) while the default moose binary uses static
linking.


	After successful compilation and linking, you can try out the
python interface by cd-ing to the pymoose directory, which should
contain the moose.py and _moose.so now. See the squid.py file and
comment out the parts requiring third party libraries unless you have
them installed. Now run: python ./squid.py - you should get the out
file squid.plot (and a nice looking graph will pop up if you have the
third party library installed).
